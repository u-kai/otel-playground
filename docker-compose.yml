version: "3.8"

services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml:ro
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "8889:8889" # Prometheus metrics endpoint
    depends_on:
      - jaeger
      - prometheus
    networks:
      - otel-network

  # Jaeger (receives traces from OTEL Collector)
  jaeger:
    image: jaegertracing/all-in-one:1.57
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "14268:14268" # Jaeger HTTP endpoint
      - "14250:14250" # Jaeger gRPC endpoint (from OTEL Collector)
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - otel-network

  # Prometheus (scrapes metrics from OTEL Collector)
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090" # Prometheus UI
    networks:
      - otel-network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: oteldb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: otelpass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - otel-network

volumes:
  postgres_data:
  prometheus_data:

networks:
  otel-network:
    driver: bridge
